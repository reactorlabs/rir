stages:
  - Build container
  - Build benchmark container
  - Run tests
  - Deploy
  - Cleanup
  - Benchmark
  - Report

cache:
  paths:
  - apt-cache/

variables:
  REBENCH_OPTIONS: "-df $CI_PROJECT_DIR/benchmarks.data -R"
  REBENCH_RUN: "/opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release"
  REBENCH_RUN_BL: "/opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks . /opt/rir/external/custom-r /opt/graal"
  SAVE_LOGS: "sh /opt/rir/tools/copy-logs.sh /opt/rir/external/custom-r/tests $CI_PROJECT_DIR/logs"

rir_container:
  stage: Build container
  image: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:19.03.0-dind
      alias: docker
  before_script:
    - docker info
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  tags:
    - dockerInDocker
  retry: 1

benchmark_container:
  stage: Build benchmark container
  needs:
    - rir_container
  image: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:19.03.0-dind
      alias: docker
  before_script:
    - docker info
  tags:
    - dockerInDocker
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - cd container/benchmark
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  retry: 1

cpp_check:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  needs:
    - rir_container
  except:
    - schedules
  stage: Run tests
  needs:
    - rir_container
  script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get -o dir::cache::archives=apt-cache install -y -qq cppcheck
    - /opt/rir/tools/cppcheck

# Test the benchmarks container before deploying
test_benchmarks:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
  stage: Run tests
  needs:
    - benchmark_container
  script:
    - "sed -i 's/warmup: 5/warmup: 0/' /opt/rbenchmarking/rebench.conf"
    - PIR_DEOPT_CHAOS=200 PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r "e:PIR-LLVM -R -r --iterations 2"
    - PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r "e:PIR-LLVM -R -r --iterations 3"


# Run some tests in the full verify (release) mode
tests_fullverify:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
    PIR_MAX_INPUT_SIZE: 10000
    PIR_INLINER_MAX_SIZE: 10000
  stage: Run tests
  needs:
    - rir_container
  except:
    - schedules
  script:
    - curl 10.200.14.25:8080/clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz > /opt/rir/external/clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
    - mkdir -p /opt/rir/build/fullverifier
    - cd /opt/rir/build/fullverifier
    - /opt/rir/tools/fetch-llvm.sh
    - cmake -DCMAKE_BUILD_TYPE=fullverifier ../..
    - make -j6
    - bin/tests

# Test particular features, like deoptimization and serialization
test_features_1:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
    PIR_LLVM_OPT_LEVEL: 0
  stage: Run tests
  needs:
    - rir_container
  except:
    - schedules
  script:
    - /opt/rir/container/install-test-deps.sh
    - cd /opt/rir/build/release
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=500 ./bin/gnur-make-tests check || $SAVE_LOGS
    - PIR_GLOBAL_SPECIALIZATION_LEVEL=0 FAST_TESTS=1 ./bin/tests
    - PIR_GLOBAL_SPECIALIZATION_LEVEL=1 FAST_TESTS=1 ./bin/tests
    - PIR_GLOBAL_SPECIALIZATION_LEVEL=2 FAST_TESTS=1 ./bin/tests
    - PIR_GLOBAL_SPECIALIZATION_LEVEL=3 FAST_TESTS=1 ./bin/tests
    - PIR_GLOBAL_SPECIALIZATION_LEVEL=4 FAST_TESTS=1 ./bin/tests
    - PIR_GLOBAL_SPECIALIZATION_LEVEL=5 FAST_TESTS=1 ./bin/tests
  artifacts:
    paths:
    - logs
    when: on_failure
    expire_in: 1 week

test_features_1_1:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
    PIR_LLVM_OPT_LEVEL: 0
  stage: Run tests
  needs:
    - rir_container
  except:
    - schedules
  script:
    - /opt/rir/container/install-test-deps.sh
    - cd /opt/rir/build/release
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=500 ./bin/gnur-make-tests check || $SAVE_LOGS
  artifacts:
    paths:
    - logs
    when: on_failure
    expire_in: 1 week



test_features_1_2:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
    PIR_LLVM_OPT_LEVEL: 0
  stage: Run tests
  needs:
    - rir_container
  except:
    - schedules
  script:
    - /opt/rir/container/install-test-deps.sh
    - cd /opt/rir/build/release
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=500 ./bin/gnur-make-tests check || $SAVE_LOGS
  artifacts:
    paths:
    - logs
    when: on_failure
    expire_in: 1 week



test_features_1_3:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
    PIR_LLVM_OPT_LEVEL: 0
  stage: Run tests
  needs:
    - rir_container
  except:
    - schedules
  script:
    - /opt/rir/container/install-test-deps.sh
    - cd /opt/rir/build/release
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=500 ./bin/gnur-make-tests check || $SAVE_LOGS
  artifacts:
    paths:
    - logs
    when: on_failure
    expire_in: 1 week



test_features_1_4:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  variables:
    GIT_STRATEGY: none
    PIR_LLVM_OPT_LEVEL: 0
  stage: Run tests
  needs:
    - rir_container
  except:
    - schedules
  script:
    - /opt/rir/container/install-test-deps.sh
    - cd /opt/rir/build/release
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=500 ./bin/gnur-make-tests check || $SAVE_LOGS
  artifacts:
    paths:
    - logs
    when: on_failure
    expire_in: 1 week


deploy:
  stage: Deploy
  except:
    - schedules
  image: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:19.03.0-dind
      alias: docker
  before_script:
    - docker info
  variables:
    GIT_STRATEGY: none
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker pull registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror:master
    - docker push registry.gitlab.com/rirvm/rir_mirror:master
    - docker pull registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror/benchmark:master
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:master
  tags:
    - dockerInDocker
  only:
    - master

cleanup_registry:
  stage: Cleanup
  image: ruby:2.5
  before_script: []
  script:
    - echo -n "$CI_BUILD_TOKEN" | ruby container/cleanup.rb

report_results:
  stage: Report
  image: ruby:2.5
  before_script: []
  script:
    - ruby tools/report_ci_results.rb

benchmark_llvm:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  stage: Benchmark
  needs:
    - test_benchmarks
  variables:
    GIT_STRATEGY: none
  tags:
    - benchmarks
  script:
    - $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS"
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 24 month
  retry: 1

benchmark_gnur:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark-baseline
  stage: Benchmark
  variables:
    GIT_STRATEGY: none
  only:
    refs:
      - schedules
  tags:
    - benchmarks
  script:
    - $REBENCH_RUN_BL "e:GNU-R $REBENCH_OPTIONS"
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 6 month
benchmark_fastr:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark-baseline
  stage: Benchmark
  variables:
    GIT_STRATEGY: none
  only:
    refs:
      - schedules
  tags:
    - benchmarks
  script:
    - $REBENCH_RUN_BL "e:FASTR $REBENCH_OPTIONS"
  artifacts:
    paths:
    - benchmarks.data
    expire_in: 6 month
