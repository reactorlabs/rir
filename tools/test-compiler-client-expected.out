PIR_CLIENT_ADDR=tcp://localhost:5555, CompilerClient initializing...

R version 4.1.1 RC (2021-08-03 r80701) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Small closure (pir_regression.R)
> f <- pir.compile(rir.compile(function(a) a(b=1, 2)))
Socket 0 sending request
> # Memoized
> f <- pir.compile(rir.compile(function(a) a(b=1, 2)))
Socket 0 sending request
> # Memoized again
> f <- pir.compile(rir.compile(function(a) a(b=1, 2)))
Socket 0 sending request
> 
> # Another small closure with a promise
> foo <- function(x) {
+    y <- x
+    function() {
+        y <- y + 1
+        y
+    }
+ }
> 
> stopifnot(pir.check(foo, NoExternalCalls, warmup=function(f) {f(1);f(2)}))
Socket 0 sending request
> 
> # Medium closure with nested closures (pir_check.R)
> mandelbrot <- function(size) {
+     size = size
+     sum = 0
+     byteAcc = 0
+     bitNum  = 0
+     y = 0
+     while (y < size) {
+       ci = (2.0 * y / size) - 1.0
+       x = 0
+       while (x < size) {
+         zr   = 0.0
+         zrzr = 0.0
+         zi   = 0.0
+         zizi = 0.0
+         cr = (2.0 * x / size) - 1.5
+         z = 0
+         notDone = TRUE
+         escape = 0
+         while (notDone && (z < 50)) {
+           zr = zrzr - zizi + cr
+           zi = 2.0 * zr * zi + ci
+           zrzr = zr * zr
+           zizi = zi * zi
+           if ((zrzr + zizi) > 4.0) {
+             notDone = FALSE
+             escape  = 1
+           }
+           z = z + 1
+         }
+         byteAcc = bitwShiftL(byteAcc, 1) + escape
+         bitNum = bitNum + 1
+         if (bitNum == 8) {
+           sum = bitwXor(sum, byteAcc)
+           byteAcc = 0
+           bitNum  = 0
+         } else if (x == (size - 1)) {
+           byteAcc = bitwShiftL(byteAcc, 8 - bitNum)
+           sum = bitwXor(sum, byteAcc)
+           byteAcc = 0
+           bitNum  = 0
+         }
+         x = x + 1
+       }
+       y = y + 1
+     }
+     return (sum)
+ }
> 
> stopifnot(pir.check(mandelbrot, NoExternalCalls, NoPromise, warmup=function(f) {f(13);f(27)}))
Socket 0 sending request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
> 
> # Memoized
> mandelbrot <- function(size) {
+     size = size
+     sum = 0
+     byteAcc = 0
+     bitNum  = 0
+     y = 0
+     while (y < size) {
+       ci = (2.0 * y / size) - 1.0
+       x = 0
+       while (x < size) {
+         zr   = 0.0
+         zrzr = 0.0
+         zi   = 0.0
+         zizi = 0.0
+         cr = (2.0 * x / size) - 1.5
+         z = 0
+         notDone = TRUE
+         escape = 0
+         while (notDone && (z < 50)) {
+           zr = zrzr - zizi + cr
+           zi = 2.0 * zr * zi + ci
+           zrzr = zr * zr
+           zizi = zi * zi
+           if ((zrzr + zizi) > 4.0) {
+             notDone = FALSE
+             escape  = 1
+           }
+           z = z + 1
+         }
+         byteAcc = bitwShiftL(byteAcc, 1) + escape
+         bitNum = bitNum + 1
+         if (bitNum == 8) {
+           sum = bitwXor(sum, byteAcc)
+           byteAcc = 0
+           bitNum  = 0
+         } else if (x == (size - 1)) {
+           byteAcc = bitwShiftL(byteAcc, 8 - bitNum)
+           sum = bitwXor(sum, byteAcc)
+           byteAcc = 0
+           bitNum  = 0
+         }
+         x = x + 1
+       }
+       y = y + 1
+     }
+     return (sum)
+ }
> stopifnot(pir.check(mandelbrot, NoExternalCalls, NoPromise, warmup=function(f) {f(13);f(27)}))
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending request
Socket 0 sending request
Socket 0 sending hashOnly request
> 
> # Many closures (pir_regression6.R)
> lsNamespaceInfo <- function(ns, ...) {
+     ns <- asNamespace(ns, base.OK = FALSE)
+     ls(..., envir = get(".__NAMESPACE__.", envir = ns, inherits = FALSE))
+ }
> allinfoNS <- function(ns) sapply(lsNamespaceInfo(ns), getNamespaceInfo, ns=ns)
> utils::str(allinfoNS("stats"))
Socket 0 sending hashOnly request
Socket 0 sending request
List of 9
 $ DLLs          :List of 1
Socket 0 sending hashOnly request
Socket 0 sending request
  ..$ stats:List of 5
  .. ..$ name         :Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending request
 chr "stats"
  .. ..$ path         :Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 chr "/opt/rir/external/custom-r/library/stats/libs/stats.so"
  .. ..$ dynamicLookup:Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 logi FALSE
  .. ..$ handle       :Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Class 'DLLHandle' Socket 0 sending hashOnly request
Socket 0 sending request
<externalptr> 
  .. ..$ info         :Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Class 'DLLInfoReference' Socket 0 sending hashOnly request
Socket 0 sending request
<externalptr> 
Socket 0 sending hashOnly request
Socket 0 sending request
  .. ..- attr(*, "class")=Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 chr "DLLInfo"
 $ dynlibs       :Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 Named chr "stats"
  ..- attr(*, "names")=Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
 chr ""
 $ exports       :Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
<environment: 0x563ffb02bd70> 
 $ imports       :Socket 0 sending hashOnly request
List of 4
Socket 0 sending hashOnly request
Socket 0 sending request
  ..$ base     :Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
 logi TRUE
  ..$ graphics :Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 Named chr [1:88] "assocplot" "title" "axis.Date" "points" ...
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 chr [1:88] "assocplot" "title" "axis.Date" "points" ...
  ..$ grDevices:Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 Named chr [1:12] "as.graphicsAnnot" "dev.cur" "dev.flush" "dev.hold" ...
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:12] "as.graphicsAnnot" "dev.cur" "dev.flush" "dev.hold" ...
  ..$ utils    :Socket 0 sending hashOnly request
 Named chr [1:4] "count.fields" "flush.console" "str" "tail"
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:4] "count.fields" "flush.console" "str" "tail"
 $ lazydata      :Socket 0 sending hashOnly request
Socket 0 sending request
<environment: 0x563ffb02c0f0> 
Socket 0 sending hashOnly request
Socket 0 sending request
  ..- attr(*, "name")=Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
 chr "lazydata:stats"
 $ nativeRoutines:Socket 0 sending hashOnly request
List of 1
  ..$ stats:Socket 0 sending hashOnly request
 Named chr [1:221] "loess_raw" "loess_dfit" "loess_dfitse" "loess_ifit" ...
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:221] "C_loess_raw" "C_loess_dfit" "C_loess_dfitse" "C_loess_ifit" ...
 $ path          :Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending request
 chr "/opt/rir/external/custom-r/library/stats"
 $ S3methods     :Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
 chr [1:416, 1:4] "[" "[" "[" "[" ...
 $ spec          :Socket 0 sending hashOnly request
 Named chr [1:2] "stats" "4.1.1"
  ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:2] "name" "version"
> utils::str(allinfoNS("stats4"))
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
List of 8
 $ dynlibs       :Socket 0 sending hashOnly request
 chr(0) 
 $ exports       :Socket 0 sending hashOnly request
<environment: 0x564002fec5d0> 
 $ imports       :Socket 0 sending hashOnly request
List of 6
  ..$ base     :Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
 logi TRUE
  ..$ grDevices:Socket 0 sending hashOnly request
 Named chr [1:2] "dev.flush" "dev.hold"
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:2] "dev.flush" "dev.hold"
  ..$ graphics :Socket 0 sending hashOnly request
 Named chr [1:3] "abline" "lines" "par"
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
Socket 0 sending request
Socket 0 sending hashOnly request
Socket 0 sending hashOnly request
Socket 0 sending request
 chr [1:3] "abline" "lines" "par"
  ..$ methods  :Socket 0 sending hashOnly request
 Named chr [1:3] "new" "show" "slotNames"
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:3] "new" "show" "slotNames"
  ..$ stats    :Socket 0 sending hashOnly request
 Named chr [1:7] "approx" "optim" "pchisq" "predict" ...
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:7] "approx" "optim" "pchisq" "predict" ...
  ..$ stats    :Socket 0 sending hashOnly request
 Named chr [1:10] "AIC" "BIC" "coef" "confint" ...
  .. ..- attr(*, "names")=Socket 0 sending hashOnly request
 chr [1:10] "AIC" "BIC" "coef" "confint" ...
 $ lazydata      :Socket 0 sending hashOnly request
<environment: 0x564002fec2f8> 
  ..- attr(*, "name")=Socket 0 sending hashOnly request
 chr "lazydata:stats4"
 $ nativeRoutines:Socket 0 sending hashOnly request
 list()
 $ path          :Socket 0 sending hashOnly request
 chr "/opt/rir/external/custom-r/library/stats4"
 $ S3methods     :Socket 0 sending hashOnly request
 chr[0 , 1:4] 
Socket 0 sending request
 $ spec          :Socket 0 sending hashOnly request
 Named chr [1:2] "stats4" "4.1.1"
  ..- attr(*, "names")=Socket 0 sending hashOnly request
Socket 0 sending request
 chr [1:2] "name" "version"
> 
> # Kill the server (named "servers" because it kills all connected servers,
> # but there is only one in this case)
> rir.killCompilerServers()
Killing connected servers
Done killing connected servers, client is no longer running
NULL
> 
